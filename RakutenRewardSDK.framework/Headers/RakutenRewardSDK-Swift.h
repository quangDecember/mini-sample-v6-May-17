#if TARGET_OS_SIMULATOR
#if 0
#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.0 (swiftlang-1001.0.69.5 clang-1001.0.46.3)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreGraphics;
@import CoreLocation;
@import CoreTelephony;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RakutenRewardSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif









@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("Location")
@interface Location : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Location (SWIFT_EXTENSION(RakutenRewardSDK))
@property (nonatomic) double altitude;
@property (nonatomic) double latitude;
@property (nonatomic) double longitude;
@property (nonatomic, copy) NSDate * _Nullable timestamp;
@end

@class NSNumber;

/// Mission Achievement Data class
/// When the mission is achieved, developer can get this data from SDK
SWIFT_CLASS("_TtC16RakutenRewardSDK22MissionAchievementData")
@interface MissionAchievementData : NSObject
/// Claim Point for this achieved mission
///
/// returns:
///
- (void)claim;
/// Get Action code
///
/// returns:
/// Action code
- (NSString * _Nullable)getAction SWIFT_WARN_UNUSED_RESULT;
/// Get Instruction for this mission
///
/// returns:
/// Mission instruction
- (NSString * _Nullable)getInstruction SWIFT_WARN_UNUSED_RESULT;
/// Get icon URL
///
/// returns:
/// Mission icon url
- (NSString * _Nullable)getIconUrl SWIFT_WARN_UNUSED_RESULT;
/// Get Notification UI type
///
/// returns:
/// Notification UI type(MODAL, BANNER, NONE, CUSTOM)
- (NSString * _Nullable)getNotificationType SWIFT_WARN_UNUSED_RESULT;
/// Get mission name
///
/// returns:
/// Mission name
- (NSString * _Nullable)getName SWIFT_WARN_UNUSED_RESULT;
/// Get Achieved date of this mission
///
/// returns:
/// Achieved Date(Date class)
- (NSDate * _Nullable)getAchievedDate SWIFT_WARN_UNUSED_RESULT;
/// Get Mission point
///
/// returns:
/// Mission Point(NSNumber)
- (NSNumber * _Nullable)getPoint SWIFT_WARN_UNUSED_RESULT;
/// Whether this mission is custom or not
///
/// returns:
/// Mission is CUSTOM or not
- (BOOL)isCustom SWIFT_WARN_UNUSED_RESULT;
- (void)setActionWithAction:(NSString * _Nonnull)action;
- (void)setAchievedDateStrWithAchievedDateStr:(NSString * _Nullable)achievedDateStr;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Ad Error Code
typedef SWIFT_ENUM(NSInteger, RADErrorCode, closed) {
/// Network error
  RADErrorCodeNetworkError = 1001,
/// No ad is available
  RADErrorCodeNoAvailableAd = 1002,
/// No coupond data is returned
  RADErrorCodeNoCouponError = 1003,
/// DFP error
  RADErrorCodeDFPError = 1004,
/// Unknown error
  RADErrorCodeUnknown = 9999,
};

/// Banner Ad Size
/// <h3>Usage Example</h3>
/// \code
/// RAdSize.Banner
/// RAdSize.Large
/// RAdSize.Rectangle
///
/// \endcode
typedef SWIFT_ENUM(NSInteger, RAdSize, closed) {
/// Ad size (320x50)
  RAdSizeBanner = 0,
/// Ad size (320x100)
  RAdSizeLarge = 1,
/// Ad size (300x250)
  RAdSizeRectangle = 2,
/// Ad size (300X400)
  RAdSizeFullScreen = 3,
};

typedef SWIFT_ENUM(NSInteger, RWFrequency, closed) {
  RWFrequencyOncePerDay = 0,
  RWFrequencyPer5Minutes = 1,
  RWFrequencyNone = 2,
};

@protocol RakutenADBannerViewDelegate;
@class NSCoder;

SWIFT_CLASS("_TtC16RakutenRewardSDK13RakutenAdView")
@interface RakutenAdView : UIView
@property (nonatomic) enum RAdSize adSize;
@property (nonatomic, copy) NSString * _Nullable keyword;
@property (nonatomic, copy) NSString * _Nullable locationId;
@property (nonatomic, weak) id <RakutenADBannerViewDelegate> _Nullable delegate;
- (void)awakeFromNib;
/// updateConstraints on UIView
- (void)updateConstraints;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16RakutenRewardSDK19RakutenADBannerView")
@interface RakutenADBannerView : RakutenAdView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
/// Call this function to update constraint of Bannerview Dynamically
- (void)updateConstraints;
@end


@interface RakutenADBannerView (SWIFT_EXTENSION(RakutenRewardSDK))
/// Call this function Load BannerView of size (320X50), (320X100), (300X250). Please set Bannersize before calling this function.
/// <h3>Usage Example</h3>
/// \code
/// yourbannerview.load()
///
/// \endcode
- (void)load;
/// Call this Function to Load Ad with AdSize
/// \param AdSize Type of Ad, default Type is banner (320X50)
/// Other Ads type are Large (320X100) , Rectangle (320X250)
/// <h3>Usage EXample</h3>
/// \code
/// yourbannerview.load(RAdSize.Banner)
/// yourbannerview.load(RAdSize.Large)
/// yourbannerview.load(RAdSize.Rectangle)
///
/// \endcode
- (void)loadWithAdSize:(enum RAdSize)AdSize;
@end

@class UIWebView;

@interface RakutenADBannerView (SWIFT_EXTENSION(RakutenRewardSDK)) <UIWebViewDelegate>
- (BOOL)webView:(UIWebView * _Nonnull)webView shouldStartLoadWithRequest:(NSURLRequest * _Nonnull)request navigationType:(UIWebViewNavigationType)navigationType SWIFT_WARN_UNUSED_RESULT;
- (void)webViewDidStartLoad:(UIWebView * _Nonnull)webView;
- (void)webViewDidFinishLoad:(UIWebView * _Nonnull)webView;
- (void)webView:(UIWebView * _Nonnull)webView didFailLoadWithError:(NSError * _Nonnull)error;
@end


/// RADBannerViewDelegate (this covers callback of Banner Ad status change)
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK27RakutenADBannerViewDelegate_")
@protocol RakutenADBannerViewDelegate
/// Tells the delegate an ad request loaded an ad.
/// \param bannerView RakutenADBannerView
///
- (void)didReceiveAdWithBannerView:(RakutenADBannerView * _Nonnull)bannerView;
/// Tells the delegate an ad request failed.
/// \param bannerView RakutenADBannerView, message: Error message, code: RADErrorCode
///
- (void)didFailToReceiveAdWithBannerView:(RakutenADBannerView * _Nonnull)bannerView message:(NSString * _Nonnull)message code:(enum RADErrorCode)code;
@end

@protocol RakutenADInterstitialDelegate;

SWIFT_CLASS("_TtC16RakutenRewardSDK35RakutenADInterstitialBaseController")
@interface RakutenADInterstitialBaseController : UIViewController
@property (nonatomic, copy) NSString * _Nullable locationId;
@property (nonatomic, strong) UIViewController * _Nullable rootViewController;
@property (nonatomic, weak) id <RakutenADInterstitialDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16RakutenRewardSDK21RakutenADInterstitial")
@interface RakutenADInterstitial : RakutenADInterstitialBaseController
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
/// Call this function to initialize RakutenADInterstitial instance
///
/// returns:
/// RakutenADInterstitial instance.
- (RakutenADInterstitial * _Nullable)instantiate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface RakutenADInterstitial (SWIFT_EXTENSION(RakutenRewardSDK))
/// Call this function to load Interstitial Ad.
/// <h3>Usage Example:</h3>
/// \code
/// self.loadAd()
///
/// \endcode
- (void)loadAd;
@end


@interface RakutenADInterstitial (SWIFT_EXTENSION(RakutenRewardSDK)) <UIWebViewDelegate>
- (BOOL)webView:(UIWebView * _Nonnull)webView shouldStartLoadWithRequest:(NSURLRequest * _Nonnull)request navigationType:(UIWebViewNavigationType)navigationType SWIFT_WARN_UNUSED_RESULT;
- (void)webViewDidStartLoad:(UIWebView * _Nonnull)webView;
- (void)webViewDidFinishLoad:(UIWebView * _Nonnull)webView;
- (void)webView:(UIWebView * _Nonnull)webView didFailLoadWithError:(NSError * _Nonnull)error;
@end





/// RakutenADInterstitialDelegate (this covers callback of Interstitial Ad status change)
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK29RakutenADInterstitialDelegate_")
@protocol RakutenADInterstitialDelegate
/// Tells the delegate an ad request loaded an ad.
/// \param ad RakutenADInterstitial
///
- (void)interstitialDidReceiveAdWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate an ad request failed.
/// \param ad RakutenADInterstitial, message: Error message, code: RADErrorCode
///
- (void)interstitialDidFailToReceiveAdWithAd:(RakutenADInterstitial * _Nonnull)ad message:(NSString * _Nonnull)message code:(enum RADErrorCode)code;
@optional
/// Tells the delegate that an interstitial will be presented.
/// \param ad RakutenADInterstitial
///
- (void)interstitialWillPresentScreenWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate the interstitial is to be animated off the screen.
/// \param ad RakutenADInterstitial
///
- (void)interstitialWillDismissScreenWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate the interstitial had been animated off the screen.
/// \param ad RakutenADInterstitial
///
- (void)interstitialDidDismissScreenWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate that a user click will open another app
/// (such as the App Store), backgrounding the current app.
/// \param ad RakutenADInterstitial
///
- (void)interstitialWillLeaveApplicationWithAd:(RakutenADInterstitial * _Nonnull)ad;
@end


@protocol RakutenRewardDelegate;
@protocol RakutenRewardSessionDelegate;
enum RakutenRewardStatus : NSInteger;
@class User;

/// RakutenReward: This is Rakuten Reward SDK basic function support class
/// This includes initialization, post action data and open portal etc…
SWIFT_CLASS("_TtC16RakutenRewardSDK13RakutenReward")
@interface RakutenReward : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RakutenReward * _Nonnull sharedInstance;)
+ (RakutenReward * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <RakutenRewardDelegate> _Nullable delegate;
@property (nonatomic) BOOL isDebug;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Start session with appCode
/// \param appCode Application Key for Reward SDK
///
///
/// returns:
///
- (void)startSessionWithAppCode:(NSString * _Nonnull)appCode;
/// Post action with actionCode
/// \param actionCode ActionCode
///
///
/// returns:
///
- (void)logActionWithActionCode:(NSString * _Nonnull)actionCode;
/// Go Reward SDK Portal Page
- (void)openPortal;
/// Go Reward SDK Sign in Page
- (void)openSignin;
/// Sign in Reward SDK
/// \param username User name
///
/// \param password Password
///
/// \param delegate Delegate method for this API
///
///
/// returns:
///
- (void)doSignInUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password delegate:(id <RakutenRewardSessionDelegate> _Nullable)delegate;
/// Cancel Sign in API(This API can be called when Sign in API is working)
- (void)cancelSignIn;
/// Sign out Reward SDK
/// \param delegate Delegate method for this API
///
///
/// returns:
///
- (void)doSignOutWithDelegate:(id <RakutenRewardSessionDelegate> _Nullable)delegate;
/// Cancel sign out(This API can be called when Sign out API is working)
- (void)cancelSignOut;
/// Add blacklist URL to block access specific URL
/// (This is for Apple Reject, if the ad URL has problem, use this API)
/// \param urlSet URL set
///
- (void)addBlacklistUrlWithUrlSet:(NSSet<NSString *> * _Nonnull)urlSet;
/// Method for sample app
/// Update mission list(Save into user data)
- (void)updateMissionList;
- (NSString * _Nullable)getAppCode SWIFT_WARN_UNUSED_RESULT;
/// Get current SDK status
///
/// returns:
/// SDK status(Online, Offline, AppCodeInvalid)
- (enum RakutenRewardStatus)getStatus SWIFT_WARN_UNUSED_RESULT;
/// Get User information
///
/// returns:
/// User information
- (User * _Nullable)getUser SWIFT_WARN_UNUSED_RESULT;
/// Get SDK version
///
/// returns:
/// SDK version(number)
- (NSString * _Nonnull)getVersion SWIFT_WARN_UNUSED_RESULT;
/// Get whether SDK is opted out or not
///
/// returns:
/// Whether SDK is optout or not
- (BOOL)isOptedOut SWIFT_WARN_UNUSED_RESULT;
/// Get UI is enable or not
///
/// returns:
/// Whether SDK UI is enabled or not
- (BOOL)isUIEnabled SWIFT_WARN_UNUSED_RESULT;
/// Set SDK Notification UI enabled or not
/// The user can change this setting on Reward SDK Portal, too
/// \param enabled Enable SDK UI or not
///
- (void)setUIEnabledWithEnabled:(BOOL)enabled;
@end


/// RakutenReward: This is Rakuten Reward SDK basic function support class
/// This includes initialization, post action data and open portal etc…
SWIFT_CLASS("_TtC16RakutenRewardSDK16RakutenRewardAds")
@interface RakutenRewardAds : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RakutenRewardAds * _Nonnull sharedInstance;)
+ (RakutenRewardAds * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL isDebug SWIFT_DEPRECATED_MSG("Use RewardConfiguration.isDebug");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Start session with appCode
/// \param appCode Application Key for Reward SDK
///
///
/// returns:
///
- (void)initializeWithAppCode:(NSString * _Nonnull)appCode;
- (NSString * _Nullable)getAppCode SWIFT_WARN_UNUSED_RESULT;
/// Get SDK version
///
/// returns:
/// SDK version(number)
- (NSString * _Nonnull)getVersion SWIFT_WARN_UNUSED_RESULT;
@end


/// Rakuten Reward SDK Delegate(this covers callback of SDK status change)
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK21RakutenRewardDelegate_")
@protocol RakutenRewardDelegate
@optional
/// Change SDK status
/// \param status RakutenReward SDK status
///
- (void)didSDKStateChange:(enum RakutenRewardStatus)status;
/// Achieved mission(change achievement status)
/// \param missionAchivement Achieved mission
///
- (void)didUpdateUnclaimedAchievement:(MissionAchievementData * _Nonnull)missionAchievement;
/// Update user information
/// \param user User information to change
///
- (void)didUpdateUser:(User * _Nonnull)user;
@end

enum RewardSessionErrorCode : NSInteger;

/// Rakuten Reward SDK delegate for Sign in and Sign out APIs
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK28RakutenRewardSessionDelegate_")
@protocol RakutenRewardSessionDelegate
@optional
/// Finished Sign in API successfully
- (void)didFinishSignIn;
/// Failed callback of Sign in API
/// \param error RewardSessionErrorCode(Please check details in RewardSessionErrorCode)
///
- (void)didFailSignInError:(enum RewardSessionErrorCode)error;
/// Finished Sign out API successfully
- (void)didFinishSignOut;
/// Faild callback of Sign out API
/// \param error RewardSessionErrorCode(Please check details in RewardSessionErrorCode)
///
- (void)didFailSignOutWithError:(enum RewardSessionErrorCode)error;
@end

/// Rakutn Reward SDK status definition
typedef SWIFT_ENUM(NSInteger, RakutenRewardStatus, closed) {
/// SDK is Online and ready to use
  RakutenRewardStatusOnline = 0,
/// SDK is Offline
  RakutenRewardStatusOffline = 1,
/// Appliaiton Code(Key) is invalid(Please check your key)
  RakutenRewardStatusAppCodeInvalid = 2,
};


SWIFT_CLASS("_TtC16RakutenRewardSDK19RewardConfiguration")
@interface RewardConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// set variable to true, Reward SDK will not request location permission at beginning of the app
/// default is false
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL enableManualLocationPermissionRequest;)
+ (BOOL)enableManualLocationPermissionRequest SWIFT_WARN_UNUSED_RESULT;
+ (void)setEnableManualLocationPermissionRequest:(BOOL)newValue;
/// if the app is tested in DEBUG mode, <code>isDebug</code> can be toggled to <code>true</code> to print more logs from Reward SDK
/// default is false
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isDebug;)
+ (BOOL)isDebug SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsDebug:(BOOL)newValue;
/// Set SDK Notification UI enabled or not
/// The user can change this setting on Reward SDK Portal, too
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isUserSettingUIEnabled;)
+ (BOOL)isUserSettingUIEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsUserSettingUIEnabled:(BOOL)newValue;
@end

@class UIButton;
enum ColorType : NSInteger;
enum BadgePosition : NSInteger;

/// Rakuten Reward default portal button UI
SWIFT_CLASS("_TtC16RakutenRewardSDK18RewardPortalButton")
@interface RewardPortalButton : UIView
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified portalButton;
- (void)awakeFromNib;
- (void)layoutSubviews;
/// Color type of button image
@property (nonatomic) enum ColorType colorType;
/// Position of badge
@property (nonatomic) enum BadgePosition badgePosition;
/// Badge position by point
@property (nonatomic) CGPoint badgePositionPoint;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

/// Color type definition for Reward Portal Button(Light, Dark)
typedef SWIFT_ENUM(NSInteger, ColorType, closed) {
/// Light color
  ColorTypeLight = 0,
/// Dark color
  ColorTypeDark = 1,
};

/// Badge position(TopLeft, TopRight, BottomLeft, BottomRight, Center, Custom)
typedef SWIFT_ENUM(NSInteger, BadgePosition, closed) {
/// TopLeft position
  BadgePositionTopLeft = 0,
/// TopRight position
  BadgePositionTopRight = 1,
/// BottomLeft position
  BadgePositionBottomLeft = 2,
/// BottomRight position
  BadgePositionBottomRight = 3,
/// Center position
  BadgePositionCenter = 4,
/// Custom position
  BadgePositionCustom = 5,
};

/// Reward Session Error Code(This is for Signin and Signout API)
typedef SWIFT_ENUM(NSInteger, RewardSessionErrorCode, closed) {
/// App code error(Use iOS application code)
  RewardSessionErrorCodeAppCodeInvalid = 1001,
/// Member information error(After sign in, SDK cannot get user infromation correctly)
  RewardSessionErrorCodeMemberInfoError = 1002,
/// SDK status error(SDK Cookies are missing, The user should be Anonymous user or SDK is disabled)
  RewardSessionErrorCodeSDKStatusError = 1003,
/// Request error (Loading error of background WebView)
  RewardSessionErrorCodeRequestError = 1004,
/// Parameter error(Cannot get Sign in Parameters from Server)
  RewardSessionErrorCodeProcessParameterError = 1005,
/// Unknown error
  RewardSessionErrorCodeUnknown = 9999,
/// Javascript error(Background WebView javascript run error. This includes username password wrong error)
  RewardSessionErrorCodeJSError = 2001,
};










/// Rakuten Reward SDK User information
/// Signin status, Unclaimed mission count, Point, Mission data
SWIFT_CLASS("_TtC16RakutenRewardSDK4User")
@interface User : NSObject
/// Get the user is sign in or not
///
/// returns:
/// Whether the user is sign in or not
- (BOOL)isSignin SWIFT_WARN_UNUSED_RESULT;
/// Get unclaimed count
///
/// returns:
/// Unclaimed mission count
- (NSInteger)getUnclaimed SWIFT_WARN_UNUSED_RESULT;
/// Get Point
///
/// returns:
/// Reward SDK current point
- (NSInteger)getPoint SWIFT_WARN_UNUSED_RESULT;
/// Get mission list
///
/// returns:
/// Mission list
- (NSArray<MissionAchievementData *> * _Nullable)getAchievementsList SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__i386__) && __i386__
// Generated by Apple Swift version 5.0 (swiftlang-1001.0.69.5 clang-1001.0.46.3)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreGraphics;
@import CoreLocation;
@import CoreTelephony;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RakutenRewardSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif









@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("Location")
@interface Location : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Location (SWIFT_EXTENSION(RakutenRewardSDK))
@property (nonatomic) double altitude;
@property (nonatomic) double latitude;
@property (nonatomic) double longitude;
@property (nonatomic, copy) NSDate * _Nullable timestamp;
@end

@class NSNumber;

/// Mission Achievement Data class
/// When the mission is achieved, developer can get this data from SDK
SWIFT_CLASS("_TtC16RakutenRewardSDK22MissionAchievementData")
@interface MissionAchievementData : NSObject
/// Claim Point for this achieved mission
///
/// returns:
///
- (void)claim;
/// Get Action code
///
/// returns:
/// Action code
- (NSString * _Nullable)getAction SWIFT_WARN_UNUSED_RESULT;
/// Get Instruction for this mission
///
/// returns:
/// Mission instruction
- (NSString * _Nullable)getInstruction SWIFT_WARN_UNUSED_RESULT;
/// Get icon URL
///
/// returns:
/// Mission icon url
- (NSString * _Nullable)getIconUrl SWIFT_WARN_UNUSED_RESULT;
/// Get Notification UI type
///
/// returns:
/// Notification UI type(MODAL, BANNER, NONE, CUSTOM)
- (NSString * _Nullable)getNotificationType SWIFT_WARN_UNUSED_RESULT;
/// Get mission name
///
/// returns:
/// Mission name
- (NSString * _Nullable)getName SWIFT_WARN_UNUSED_RESULT;
/// Get Achieved date of this mission
///
/// returns:
/// Achieved Date(Date class)
- (NSDate * _Nullable)getAchievedDate SWIFT_WARN_UNUSED_RESULT;
/// Get Mission point
///
/// returns:
/// Mission Point(NSNumber)
- (NSNumber * _Nullable)getPoint SWIFT_WARN_UNUSED_RESULT;
/// Whether this mission is custom or not
///
/// returns:
/// Mission is CUSTOM or not
- (BOOL)isCustom SWIFT_WARN_UNUSED_RESULT;
- (void)setActionWithAction:(NSString * _Nonnull)action;
- (void)setAchievedDateStrWithAchievedDateStr:(NSString * _Nullable)achievedDateStr;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Ad Error Code
typedef SWIFT_ENUM(NSInteger, RADErrorCode, closed) {
/// Network error
  RADErrorCodeNetworkError = 1001,
/// No ad is available
  RADErrorCodeNoAvailableAd = 1002,
/// No coupond data is returned
  RADErrorCodeNoCouponError = 1003,
/// DFP error
  RADErrorCodeDFPError = 1004,
/// Unknown error
  RADErrorCodeUnknown = 9999,
};

/// Banner Ad Size
/// <h3>Usage Example</h3>
/// \code
/// RAdSize.Banner
/// RAdSize.Large
/// RAdSize.Rectangle
///
/// \endcode
typedef SWIFT_ENUM(NSInteger, RAdSize, closed) {
/// Ad size (320x50)
  RAdSizeBanner = 0,
/// Ad size (320x100)
  RAdSizeLarge = 1,
/// Ad size (300x250)
  RAdSizeRectangle = 2,
/// Ad size (300X400)
  RAdSizeFullScreen = 3,
};

typedef SWIFT_ENUM(NSInteger, RWFrequency, closed) {
  RWFrequencyOncePerDay = 0,
  RWFrequencyPer5Minutes = 1,
  RWFrequencyNone = 2,
};

@protocol RakutenADBannerViewDelegate;
@class NSCoder;

SWIFT_CLASS("_TtC16RakutenRewardSDK13RakutenAdView")
@interface RakutenAdView : UIView
@property (nonatomic) enum RAdSize adSize;
@property (nonatomic, copy) NSString * _Nullable keyword;
@property (nonatomic, copy) NSString * _Nullable locationId;
@property (nonatomic, weak) id <RakutenADBannerViewDelegate> _Nullable delegate;
- (void)awakeFromNib;
/// updateConstraints on UIView
- (void)updateConstraints;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16RakutenRewardSDK19RakutenADBannerView")
@interface RakutenADBannerView : RakutenAdView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
/// Call this function to update constraint of Bannerview Dynamically
- (void)updateConstraints;
@end


@interface RakutenADBannerView (SWIFT_EXTENSION(RakutenRewardSDK))
/// Call this function Load BannerView of size (320X50), (320X100), (300X250). Please set Bannersize before calling this function.
/// <h3>Usage Example</h3>
/// \code
/// yourbannerview.load()
///
/// \endcode
- (void)load;
/// Call this Function to Load Ad with AdSize
/// \param AdSize Type of Ad, default Type is banner (320X50)
/// Other Ads type are Large (320X100) , Rectangle (320X250)
/// <h3>Usage EXample</h3>
/// \code
/// yourbannerview.load(RAdSize.Banner)
/// yourbannerview.load(RAdSize.Large)
/// yourbannerview.load(RAdSize.Rectangle)
///
/// \endcode
- (void)loadWithAdSize:(enum RAdSize)AdSize;
@end

@class UIWebView;

@interface RakutenADBannerView (SWIFT_EXTENSION(RakutenRewardSDK)) <UIWebViewDelegate>
- (BOOL)webView:(UIWebView * _Nonnull)webView shouldStartLoadWithRequest:(NSURLRequest * _Nonnull)request navigationType:(UIWebViewNavigationType)navigationType SWIFT_WARN_UNUSED_RESULT;
- (void)webViewDidStartLoad:(UIWebView * _Nonnull)webView;
- (void)webViewDidFinishLoad:(UIWebView * _Nonnull)webView;
- (void)webView:(UIWebView * _Nonnull)webView didFailLoadWithError:(NSError * _Nonnull)error;
@end


/// RADBannerViewDelegate (this covers callback of Banner Ad status change)
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK27RakutenADBannerViewDelegate_")
@protocol RakutenADBannerViewDelegate
/// Tells the delegate an ad request loaded an ad.
/// \param bannerView RakutenADBannerView
///
- (void)didReceiveAdWithBannerView:(RakutenADBannerView * _Nonnull)bannerView;
/// Tells the delegate an ad request failed.
/// \param bannerView RakutenADBannerView, message: Error message, code: RADErrorCode
///
- (void)didFailToReceiveAdWithBannerView:(RakutenADBannerView * _Nonnull)bannerView message:(NSString * _Nonnull)message code:(enum RADErrorCode)code;
@end

@protocol RakutenADInterstitialDelegate;

SWIFT_CLASS("_TtC16RakutenRewardSDK35RakutenADInterstitialBaseController")
@interface RakutenADInterstitialBaseController : UIViewController
@property (nonatomic, copy) NSString * _Nullable locationId;
@property (nonatomic, strong) UIViewController * _Nullable rootViewController;
@property (nonatomic, weak) id <RakutenADInterstitialDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16RakutenRewardSDK21RakutenADInterstitial")
@interface RakutenADInterstitial : RakutenADInterstitialBaseController
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
/// Call this function to initialize RakutenADInterstitial instance
///
/// returns:
/// RakutenADInterstitial instance.
- (RakutenADInterstitial * _Nullable)instantiate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface RakutenADInterstitial (SWIFT_EXTENSION(RakutenRewardSDK))
/// Call this function to load Interstitial Ad.
/// <h3>Usage Example:</h3>
/// \code
/// self.loadAd()
///
/// \endcode
- (void)loadAd;
@end


@interface RakutenADInterstitial (SWIFT_EXTENSION(RakutenRewardSDK)) <UIWebViewDelegate>
- (BOOL)webView:(UIWebView * _Nonnull)webView shouldStartLoadWithRequest:(NSURLRequest * _Nonnull)request navigationType:(UIWebViewNavigationType)navigationType SWIFT_WARN_UNUSED_RESULT;
- (void)webViewDidStartLoad:(UIWebView * _Nonnull)webView;
- (void)webViewDidFinishLoad:(UIWebView * _Nonnull)webView;
- (void)webView:(UIWebView * _Nonnull)webView didFailLoadWithError:(NSError * _Nonnull)error;
@end





/// RakutenADInterstitialDelegate (this covers callback of Interstitial Ad status change)
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK29RakutenADInterstitialDelegate_")
@protocol RakutenADInterstitialDelegate
/// Tells the delegate an ad request loaded an ad.
/// \param ad RakutenADInterstitial
///
- (void)interstitialDidReceiveAdWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate an ad request failed.
/// \param ad RakutenADInterstitial, message: Error message, code: RADErrorCode
///
- (void)interstitialDidFailToReceiveAdWithAd:(RakutenADInterstitial * _Nonnull)ad message:(NSString * _Nonnull)message code:(enum RADErrorCode)code;
@optional
/// Tells the delegate that an interstitial will be presented.
/// \param ad RakutenADInterstitial
///
- (void)interstitialWillPresentScreenWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate the interstitial is to be animated off the screen.
/// \param ad RakutenADInterstitial
///
- (void)interstitialWillDismissScreenWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate the interstitial had been animated off the screen.
/// \param ad RakutenADInterstitial
///
- (void)interstitialDidDismissScreenWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate that a user click will open another app
/// (such as the App Store), backgrounding the current app.
/// \param ad RakutenADInterstitial
///
- (void)interstitialWillLeaveApplicationWithAd:(RakutenADInterstitial * _Nonnull)ad;
@end


@protocol RakutenRewardDelegate;
@protocol RakutenRewardSessionDelegate;
enum RakutenRewardStatus : NSInteger;
@class User;

/// RakutenReward: This is Rakuten Reward SDK basic function support class
/// This includes initialization, post action data and open portal etc…
SWIFT_CLASS("_TtC16RakutenRewardSDK13RakutenReward")
@interface RakutenReward : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RakutenReward * _Nonnull sharedInstance;)
+ (RakutenReward * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <RakutenRewardDelegate> _Nullable delegate;
@property (nonatomic) BOOL isDebug;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Start session with appCode
/// \param appCode Application Key for Reward SDK
///
///
/// returns:
///
- (void)startSessionWithAppCode:(NSString * _Nonnull)appCode;
/// Post action with actionCode
/// \param actionCode ActionCode
///
///
/// returns:
///
- (void)logActionWithActionCode:(NSString * _Nonnull)actionCode;
/// Go Reward SDK Portal Page
- (void)openPortal;
/// Go Reward SDK Sign in Page
- (void)openSignin;
/// Sign in Reward SDK
/// \param username User name
///
/// \param password Password
///
/// \param delegate Delegate method for this API
///
///
/// returns:
///
- (void)doSignInUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password delegate:(id <RakutenRewardSessionDelegate> _Nullable)delegate;
/// Cancel Sign in API(This API can be called when Sign in API is working)
- (void)cancelSignIn;
/// Sign out Reward SDK
/// \param delegate Delegate method for this API
///
///
/// returns:
///
- (void)doSignOutWithDelegate:(id <RakutenRewardSessionDelegate> _Nullable)delegate;
/// Cancel sign out(This API can be called when Sign out API is working)
- (void)cancelSignOut;
/// Add blacklist URL to block access specific URL
/// (This is for Apple Reject, if the ad URL has problem, use this API)
/// \param urlSet URL set
///
- (void)addBlacklistUrlWithUrlSet:(NSSet<NSString *> * _Nonnull)urlSet;
/// Method for sample app
/// Update mission list(Save into user data)
- (void)updateMissionList;
- (NSString * _Nullable)getAppCode SWIFT_WARN_UNUSED_RESULT;
/// Get current SDK status
///
/// returns:
/// SDK status(Online, Offline, AppCodeInvalid)
- (enum RakutenRewardStatus)getStatus SWIFT_WARN_UNUSED_RESULT;
/// Get User information
///
/// returns:
/// User information
- (User * _Nullable)getUser SWIFT_WARN_UNUSED_RESULT;
/// Get SDK version
///
/// returns:
/// SDK version(number)
- (NSString * _Nonnull)getVersion SWIFT_WARN_UNUSED_RESULT;
/// Get whether SDK is opted out or not
///
/// returns:
/// Whether SDK is optout or not
- (BOOL)isOptedOut SWIFT_WARN_UNUSED_RESULT;
/// Get UI is enable or not
///
/// returns:
/// Whether SDK UI is enabled or not
- (BOOL)isUIEnabled SWIFT_WARN_UNUSED_RESULT;
/// Set SDK Notification UI enabled or not
/// The user can change this setting on Reward SDK Portal, too
/// \param enabled Enable SDK UI or not
///
- (void)setUIEnabledWithEnabled:(BOOL)enabled;
@end


/// RakutenReward: This is Rakuten Reward SDK basic function support class
/// This includes initialization, post action data and open portal etc…
SWIFT_CLASS("_TtC16RakutenRewardSDK16RakutenRewardAds")
@interface RakutenRewardAds : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RakutenRewardAds * _Nonnull sharedInstance;)
+ (RakutenRewardAds * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL isDebug SWIFT_DEPRECATED_MSG("Use RewardConfiguration.isDebug");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Start session with appCode
/// \param appCode Application Key for Reward SDK
///
///
/// returns:
///
- (void)initializeWithAppCode:(NSString * _Nonnull)appCode;
- (NSString * _Nullable)getAppCode SWIFT_WARN_UNUSED_RESULT;
/// Get SDK version
///
/// returns:
/// SDK version(number)
- (NSString * _Nonnull)getVersion SWIFT_WARN_UNUSED_RESULT;
@end


/// Rakuten Reward SDK Delegate(this covers callback of SDK status change)
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK21RakutenRewardDelegate_")
@protocol RakutenRewardDelegate
@optional
/// Change SDK status
/// \param status RakutenReward SDK status
///
- (void)didSDKStateChange:(enum RakutenRewardStatus)status;
/// Achieved mission(change achievement status)
/// \param missionAchivement Achieved mission
///
- (void)didUpdateUnclaimedAchievement:(MissionAchievementData * _Nonnull)missionAchievement;
/// Update user information
/// \param user User information to change
///
- (void)didUpdateUser:(User * _Nonnull)user;
@end

enum RewardSessionErrorCode : NSInteger;

/// Rakuten Reward SDK delegate for Sign in and Sign out APIs
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK28RakutenRewardSessionDelegate_")
@protocol RakutenRewardSessionDelegate
@optional
/// Finished Sign in API successfully
- (void)didFinishSignIn;
/// Failed callback of Sign in API
/// \param error RewardSessionErrorCode(Please check details in RewardSessionErrorCode)
///
- (void)didFailSignInError:(enum RewardSessionErrorCode)error;
/// Finished Sign out API successfully
- (void)didFinishSignOut;
/// Faild callback of Sign out API
/// \param error RewardSessionErrorCode(Please check details in RewardSessionErrorCode)
///
- (void)didFailSignOutWithError:(enum RewardSessionErrorCode)error;
@end

/// Rakutn Reward SDK status definition
typedef SWIFT_ENUM(NSInteger, RakutenRewardStatus, closed) {
/// SDK is Online and ready to use
  RakutenRewardStatusOnline = 0,
/// SDK is Offline
  RakutenRewardStatusOffline = 1,
/// Appliaiton Code(Key) is invalid(Please check your key)
  RakutenRewardStatusAppCodeInvalid = 2,
};


SWIFT_CLASS("_TtC16RakutenRewardSDK19RewardConfiguration")
@interface RewardConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// set variable to true, Reward SDK will not request location permission at beginning of the app
/// default is false
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL enableManualLocationPermissionRequest;)
+ (BOOL)enableManualLocationPermissionRequest SWIFT_WARN_UNUSED_RESULT;
+ (void)setEnableManualLocationPermissionRequest:(BOOL)newValue;
/// if the app is tested in DEBUG mode, <code>isDebug</code> can be toggled to <code>true</code> to print more logs from Reward SDK
/// default is false
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isDebug;)
+ (BOOL)isDebug SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsDebug:(BOOL)newValue;
/// Set SDK Notification UI enabled or not
/// The user can change this setting on Reward SDK Portal, too
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isUserSettingUIEnabled;)
+ (BOOL)isUserSettingUIEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsUserSettingUIEnabled:(BOOL)newValue;
@end

@class UIButton;
enum ColorType : NSInteger;
enum BadgePosition : NSInteger;

/// Rakuten Reward default portal button UI
SWIFT_CLASS("_TtC16RakutenRewardSDK18RewardPortalButton")
@interface RewardPortalButton : UIView
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified portalButton;
- (void)awakeFromNib;
- (void)layoutSubviews;
/// Color type of button image
@property (nonatomic) enum ColorType colorType;
/// Position of badge
@property (nonatomic) enum BadgePosition badgePosition;
/// Badge position by point
@property (nonatomic) CGPoint badgePositionPoint;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

/// Color type definition for Reward Portal Button(Light, Dark)
typedef SWIFT_ENUM(NSInteger, ColorType, closed) {
/// Light color
  ColorTypeLight = 0,
/// Dark color
  ColorTypeDark = 1,
};

/// Badge position(TopLeft, TopRight, BottomLeft, BottomRight, Center, Custom)
typedef SWIFT_ENUM(NSInteger, BadgePosition, closed) {
/// TopLeft position
  BadgePositionTopLeft = 0,
/// TopRight position
  BadgePositionTopRight = 1,
/// BottomLeft position
  BadgePositionBottomLeft = 2,
/// BottomRight position
  BadgePositionBottomRight = 3,
/// Center position
  BadgePositionCenter = 4,
/// Custom position
  BadgePositionCustom = 5,
};

/// Reward Session Error Code(This is for Signin and Signout API)
typedef SWIFT_ENUM(NSInteger, RewardSessionErrorCode, closed) {
/// App code error(Use iOS application code)
  RewardSessionErrorCodeAppCodeInvalid = 1001,
/// Member information error(After sign in, SDK cannot get user infromation correctly)
  RewardSessionErrorCodeMemberInfoError = 1002,
/// SDK status error(SDK Cookies are missing, The user should be Anonymous user or SDK is disabled)
  RewardSessionErrorCodeSDKStatusError = 1003,
/// Request error (Loading error of background WebView)
  RewardSessionErrorCodeRequestError = 1004,
/// Parameter error(Cannot get Sign in Parameters from Server)
  RewardSessionErrorCodeProcessParameterError = 1005,
/// Unknown error
  RewardSessionErrorCodeUnknown = 9999,
/// Javascript error(Background WebView javascript run error. This includes username password wrong error)
  RewardSessionErrorCodeJSError = 2001,
};










/// Rakuten Reward SDK User information
/// Signin status, Unclaimed mission count, Point, Mission data
SWIFT_CLASS("_TtC16RakutenRewardSDK4User")
@interface User : NSObject
/// Get the user is sign in or not
///
/// returns:
/// Whether the user is sign in or not
- (BOOL)isSignin SWIFT_WARN_UNUSED_RESULT;
/// Get unclaimed count
///
/// returns:
/// Unclaimed mission count
- (NSInteger)getUnclaimed SWIFT_WARN_UNUSED_RESULT;
/// Get Point
///
/// returns:
/// Reward SDK current point
- (NSInteger)getPoint SWIFT_WARN_UNUSED_RESULT;
/// Get mission list
///
/// returns:
/// Mission list
- (NSArray<MissionAchievementData *> * _Nullable)getAchievementsList SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
#else
#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.0 (swiftlang-1001.0.69.5 clang-1001.0.46.3)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreGraphics;
@import CoreLocation;
@import CoreTelephony;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RakutenRewardSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif









@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("Location")
@interface Location : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Location (SWIFT_EXTENSION(RakutenRewardSDK))
@property (nonatomic) double altitude;
@property (nonatomic) double latitude;
@property (nonatomic) double longitude;
@property (nonatomic, copy) NSDate * _Nullable timestamp;
@end

@class NSNumber;

/// Mission Achievement Data class
/// When the mission is achieved, developer can get this data from SDK
SWIFT_CLASS("_TtC16RakutenRewardSDK22MissionAchievementData")
@interface MissionAchievementData : NSObject
/// Claim Point for this achieved mission
///
/// returns:
///
- (void)claim;
/// Get Action code
///
/// returns:
/// Action code
- (NSString * _Nullable)getAction SWIFT_WARN_UNUSED_RESULT;
/// Get Instruction for this mission
///
/// returns:
/// Mission instruction
- (NSString * _Nullable)getInstruction SWIFT_WARN_UNUSED_RESULT;
/// Get icon URL
///
/// returns:
/// Mission icon url
- (NSString * _Nullable)getIconUrl SWIFT_WARN_UNUSED_RESULT;
/// Get Notification UI type
///
/// returns:
/// Notification UI type(MODAL, BANNER, NONE, CUSTOM)
- (NSString * _Nullable)getNotificationType SWIFT_WARN_UNUSED_RESULT;
/// Get mission name
///
/// returns:
/// Mission name
- (NSString * _Nullable)getName SWIFT_WARN_UNUSED_RESULT;
/// Get Achieved date of this mission
///
/// returns:
/// Achieved Date(Date class)
- (NSDate * _Nullable)getAchievedDate SWIFT_WARN_UNUSED_RESULT;
/// Get Mission point
///
/// returns:
/// Mission Point(NSNumber)
- (NSNumber * _Nullable)getPoint SWIFT_WARN_UNUSED_RESULT;
/// Whether this mission is custom or not
///
/// returns:
/// Mission is CUSTOM or not
- (BOOL)isCustom SWIFT_WARN_UNUSED_RESULT;
- (void)setActionWithAction:(NSString * _Nonnull)action;
- (void)setAchievedDateStrWithAchievedDateStr:(NSString * _Nullable)achievedDateStr;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Ad Error Code
typedef SWIFT_ENUM(NSInteger, RADErrorCode, closed) {
/// Network error
  RADErrorCodeNetworkError = 1001,
/// No ad is available
  RADErrorCodeNoAvailableAd = 1002,
/// No coupond data is returned
  RADErrorCodeNoCouponError = 1003,
/// DFP error
  RADErrorCodeDFPError = 1004,
/// Unknown error
  RADErrorCodeUnknown = 9999,
};

/// Banner Ad Size
/// <h3>Usage Example</h3>
/// \code
/// RAdSize.Banner
/// RAdSize.Large
/// RAdSize.Rectangle
///
/// \endcode
typedef SWIFT_ENUM(NSInteger, RAdSize, closed) {
/// Ad size (320x50)
  RAdSizeBanner = 0,
/// Ad size (320x100)
  RAdSizeLarge = 1,
/// Ad size (300x250)
  RAdSizeRectangle = 2,
/// Ad size (300X400)
  RAdSizeFullScreen = 3,
};

typedef SWIFT_ENUM(NSInteger, RWFrequency, closed) {
  RWFrequencyOncePerDay = 0,
  RWFrequencyPer5Minutes = 1,
  RWFrequencyNone = 2,
};

@protocol RakutenADBannerViewDelegate;
@class NSCoder;

SWIFT_CLASS("_TtC16RakutenRewardSDK13RakutenAdView")
@interface RakutenAdView : UIView
@property (nonatomic) enum RAdSize adSize;
@property (nonatomic, copy) NSString * _Nullable keyword;
@property (nonatomic, copy) NSString * _Nullable locationId;
@property (nonatomic, weak) id <RakutenADBannerViewDelegate> _Nullable delegate;
- (void)awakeFromNib;
/// updateConstraints on UIView
- (void)updateConstraints;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16RakutenRewardSDK19RakutenADBannerView")
@interface RakutenADBannerView : RakutenAdView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
/// Call this function to update constraint of Bannerview Dynamically
- (void)updateConstraints;
@end


@interface RakutenADBannerView (SWIFT_EXTENSION(RakutenRewardSDK))
/// Call this function Load BannerView of size (320X50), (320X100), (300X250). Please set Bannersize before calling this function.
/// <h3>Usage Example</h3>
/// \code
/// yourbannerview.load()
///
/// \endcode
- (void)load;
/// Call this Function to Load Ad with AdSize
/// \param AdSize Type of Ad, default Type is banner (320X50)
/// Other Ads type are Large (320X100) , Rectangle (320X250)
/// <h3>Usage EXample</h3>
/// \code
/// yourbannerview.load(RAdSize.Banner)
/// yourbannerview.load(RAdSize.Large)
/// yourbannerview.load(RAdSize.Rectangle)
///
/// \endcode
- (void)loadWithAdSize:(enum RAdSize)AdSize;
@end

@class UIWebView;

@interface RakutenADBannerView (SWIFT_EXTENSION(RakutenRewardSDK)) <UIWebViewDelegate>
- (BOOL)webView:(UIWebView * _Nonnull)webView shouldStartLoadWithRequest:(NSURLRequest * _Nonnull)request navigationType:(UIWebViewNavigationType)navigationType SWIFT_WARN_UNUSED_RESULT;
- (void)webViewDidStartLoad:(UIWebView * _Nonnull)webView;
- (void)webViewDidFinishLoad:(UIWebView * _Nonnull)webView;
- (void)webView:(UIWebView * _Nonnull)webView didFailLoadWithError:(NSError * _Nonnull)error;
@end


/// RADBannerViewDelegate (this covers callback of Banner Ad status change)
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK27RakutenADBannerViewDelegate_")
@protocol RakutenADBannerViewDelegate
/// Tells the delegate an ad request loaded an ad.
/// \param bannerView RakutenADBannerView
///
- (void)didReceiveAdWithBannerView:(RakutenADBannerView * _Nonnull)bannerView;
/// Tells the delegate an ad request failed.
/// \param bannerView RakutenADBannerView, message: Error message, code: RADErrorCode
///
- (void)didFailToReceiveAdWithBannerView:(RakutenADBannerView * _Nonnull)bannerView message:(NSString * _Nonnull)message code:(enum RADErrorCode)code;
@end

@protocol RakutenADInterstitialDelegate;

SWIFT_CLASS("_TtC16RakutenRewardSDK35RakutenADInterstitialBaseController")
@interface RakutenADInterstitialBaseController : UIViewController
@property (nonatomic, copy) NSString * _Nullable locationId;
@property (nonatomic, strong) UIViewController * _Nullable rootViewController;
@property (nonatomic, weak) id <RakutenADInterstitialDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16RakutenRewardSDK21RakutenADInterstitial")
@interface RakutenADInterstitial : RakutenADInterstitialBaseController
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
/// Call this function to initialize RakutenADInterstitial instance
///
/// returns:
/// RakutenADInterstitial instance.
- (RakutenADInterstitial * _Nullable)instantiate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface RakutenADInterstitial (SWIFT_EXTENSION(RakutenRewardSDK))
/// Call this function to load Interstitial Ad.
/// <h3>Usage Example:</h3>
/// \code
/// self.loadAd()
///
/// \endcode
- (void)loadAd;
@end


@interface RakutenADInterstitial (SWIFT_EXTENSION(RakutenRewardSDK)) <UIWebViewDelegate>
- (BOOL)webView:(UIWebView * _Nonnull)webView shouldStartLoadWithRequest:(NSURLRequest * _Nonnull)request navigationType:(UIWebViewNavigationType)navigationType SWIFT_WARN_UNUSED_RESULT;
- (void)webViewDidStartLoad:(UIWebView * _Nonnull)webView;
- (void)webViewDidFinishLoad:(UIWebView * _Nonnull)webView;
- (void)webView:(UIWebView * _Nonnull)webView didFailLoadWithError:(NSError * _Nonnull)error;
@end





/// RakutenADInterstitialDelegate (this covers callback of Interstitial Ad status change)
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK29RakutenADInterstitialDelegate_")
@protocol RakutenADInterstitialDelegate
/// Tells the delegate an ad request loaded an ad.
/// \param ad RakutenADInterstitial
///
- (void)interstitialDidReceiveAdWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate an ad request failed.
/// \param ad RakutenADInterstitial, message: Error message, code: RADErrorCode
///
- (void)interstitialDidFailToReceiveAdWithAd:(RakutenADInterstitial * _Nonnull)ad message:(NSString * _Nonnull)message code:(enum RADErrorCode)code;
@optional
/// Tells the delegate that an interstitial will be presented.
/// \param ad RakutenADInterstitial
///
- (void)interstitialWillPresentScreenWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate the interstitial is to be animated off the screen.
/// \param ad RakutenADInterstitial
///
- (void)interstitialWillDismissScreenWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate the interstitial had been animated off the screen.
/// \param ad RakutenADInterstitial
///
- (void)interstitialDidDismissScreenWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate that a user click will open another app
/// (such as the App Store), backgrounding the current app.
/// \param ad RakutenADInterstitial
///
- (void)interstitialWillLeaveApplicationWithAd:(RakutenADInterstitial * _Nonnull)ad;
@end


@protocol RakutenRewardDelegate;
@protocol RakutenRewardSessionDelegate;
enum RakutenRewardStatus : NSInteger;
@class User;

/// RakutenReward: This is Rakuten Reward SDK basic function support class
/// This includes initialization, post action data and open portal etc…
SWIFT_CLASS("_TtC16RakutenRewardSDK13RakutenReward")
@interface RakutenReward : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RakutenReward * _Nonnull sharedInstance;)
+ (RakutenReward * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <RakutenRewardDelegate> _Nullable delegate;
@property (nonatomic) BOOL isDebug;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Start session with appCode
/// \param appCode Application Key for Reward SDK
///
///
/// returns:
///
- (void)startSessionWithAppCode:(NSString * _Nonnull)appCode;
/// Post action with actionCode
/// \param actionCode ActionCode
///
///
/// returns:
///
- (void)logActionWithActionCode:(NSString * _Nonnull)actionCode;
/// Go Reward SDK Portal Page
- (void)openPortal;
/// Go Reward SDK Sign in Page
- (void)openSignin;
/// Sign in Reward SDK
/// \param username User name
///
/// \param password Password
///
/// \param delegate Delegate method for this API
///
///
/// returns:
///
- (void)doSignInUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password delegate:(id <RakutenRewardSessionDelegate> _Nullable)delegate;
/// Cancel Sign in API(This API can be called when Sign in API is working)
- (void)cancelSignIn;
/// Sign out Reward SDK
/// \param delegate Delegate method for this API
///
///
/// returns:
///
- (void)doSignOutWithDelegate:(id <RakutenRewardSessionDelegate> _Nullable)delegate;
/// Cancel sign out(This API can be called when Sign out API is working)
- (void)cancelSignOut;
/// Add blacklist URL to block access specific URL
/// (This is for Apple Reject, if the ad URL has problem, use this API)
/// \param urlSet URL set
///
- (void)addBlacklistUrlWithUrlSet:(NSSet<NSString *> * _Nonnull)urlSet;
/// Method for sample app
/// Update mission list(Save into user data)
- (void)updateMissionList;
- (NSString * _Nullable)getAppCode SWIFT_WARN_UNUSED_RESULT;
/// Get current SDK status
///
/// returns:
/// SDK status(Online, Offline, AppCodeInvalid)
- (enum RakutenRewardStatus)getStatus SWIFT_WARN_UNUSED_RESULT;
/// Get User information
///
/// returns:
/// User information
- (User * _Nullable)getUser SWIFT_WARN_UNUSED_RESULT;
/// Get SDK version
///
/// returns:
/// SDK version(number)
- (NSString * _Nonnull)getVersion SWIFT_WARN_UNUSED_RESULT;
/// Get whether SDK is opted out or not
///
/// returns:
/// Whether SDK is optout or not
- (BOOL)isOptedOut SWIFT_WARN_UNUSED_RESULT;
/// Get UI is enable or not
///
/// returns:
/// Whether SDK UI is enabled or not
- (BOOL)isUIEnabled SWIFT_WARN_UNUSED_RESULT;
/// Set SDK Notification UI enabled or not
/// The user can change this setting on Reward SDK Portal, too
/// \param enabled Enable SDK UI or not
///
- (void)setUIEnabledWithEnabled:(BOOL)enabled;
@end


/// RakutenReward: This is Rakuten Reward SDK basic function support class
/// This includes initialization, post action data and open portal etc…
SWIFT_CLASS("_TtC16RakutenRewardSDK16RakutenRewardAds")
@interface RakutenRewardAds : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RakutenRewardAds * _Nonnull sharedInstance;)
+ (RakutenRewardAds * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL isDebug SWIFT_DEPRECATED_MSG("Use RewardConfiguration.isDebug");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Start session with appCode
/// \param appCode Application Key for Reward SDK
///
///
/// returns:
///
- (void)initializeWithAppCode:(NSString * _Nonnull)appCode;
- (NSString * _Nullable)getAppCode SWIFT_WARN_UNUSED_RESULT;
/// Get SDK version
///
/// returns:
/// SDK version(number)
- (NSString * _Nonnull)getVersion SWIFT_WARN_UNUSED_RESULT;
@end


/// Rakuten Reward SDK Delegate(this covers callback of SDK status change)
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK21RakutenRewardDelegate_")
@protocol RakutenRewardDelegate
@optional
/// Change SDK status
/// \param status RakutenReward SDK status
///
- (void)didSDKStateChange:(enum RakutenRewardStatus)status;
/// Achieved mission(change achievement status)
/// \param missionAchivement Achieved mission
///
- (void)didUpdateUnclaimedAchievement:(MissionAchievementData * _Nonnull)missionAchievement;
/// Update user information
/// \param user User information to change
///
- (void)didUpdateUser:(User * _Nonnull)user;
@end

enum RewardSessionErrorCode : NSInteger;

/// Rakuten Reward SDK delegate for Sign in and Sign out APIs
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK28RakutenRewardSessionDelegate_")
@protocol RakutenRewardSessionDelegate
@optional
/// Finished Sign in API successfully
- (void)didFinishSignIn;
/// Failed callback of Sign in API
/// \param error RewardSessionErrorCode(Please check details in RewardSessionErrorCode)
///
- (void)didFailSignInError:(enum RewardSessionErrorCode)error;
/// Finished Sign out API successfully
- (void)didFinishSignOut;
/// Faild callback of Sign out API
/// \param error RewardSessionErrorCode(Please check details in RewardSessionErrorCode)
///
- (void)didFailSignOutWithError:(enum RewardSessionErrorCode)error;
@end

/// Rakutn Reward SDK status definition
typedef SWIFT_ENUM(NSInteger, RakutenRewardStatus, closed) {
/// SDK is Online and ready to use
  RakutenRewardStatusOnline = 0,
/// SDK is Offline
  RakutenRewardStatusOffline = 1,
/// Appliaiton Code(Key) is invalid(Please check your key)
  RakutenRewardStatusAppCodeInvalid = 2,
};


SWIFT_CLASS("_TtC16RakutenRewardSDK19RewardConfiguration")
@interface RewardConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// set variable to true, Reward SDK will not request location permission at beginning of the app
/// default is false
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL enableManualLocationPermissionRequest;)
+ (BOOL)enableManualLocationPermissionRequest SWIFT_WARN_UNUSED_RESULT;
+ (void)setEnableManualLocationPermissionRequest:(BOOL)newValue;
/// if the app is tested in DEBUG mode, <code>isDebug</code> can be toggled to <code>true</code> to print more logs from Reward SDK
/// default is false
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isDebug;)
+ (BOOL)isDebug SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsDebug:(BOOL)newValue;
/// Set SDK Notification UI enabled or not
/// The user can change this setting on Reward SDK Portal, too
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isUserSettingUIEnabled;)
+ (BOOL)isUserSettingUIEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsUserSettingUIEnabled:(BOOL)newValue;
@end

@class UIButton;
enum ColorType : NSInteger;
enum BadgePosition : NSInteger;

/// Rakuten Reward default portal button UI
SWIFT_CLASS("_TtC16RakutenRewardSDK18RewardPortalButton")
@interface RewardPortalButton : UIView
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified portalButton;
- (void)awakeFromNib;
- (void)layoutSubviews;
/// Color type of button image
@property (nonatomic) enum ColorType colorType;
/// Position of badge
@property (nonatomic) enum BadgePosition badgePosition;
/// Badge position by point
@property (nonatomic) CGPoint badgePositionPoint;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

/// Color type definition for Reward Portal Button(Light, Dark)
typedef SWIFT_ENUM(NSInteger, ColorType, closed) {
/// Light color
  ColorTypeLight = 0,
/// Dark color
  ColorTypeDark = 1,
};

/// Badge position(TopLeft, TopRight, BottomLeft, BottomRight, Center, Custom)
typedef SWIFT_ENUM(NSInteger, BadgePosition, closed) {
/// TopLeft position
  BadgePositionTopLeft = 0,
/// TopRight position
  BadgePositionTopRight = 1,
/// BottomLeft position
  BadgePositionBottomLeft = 2,
/// BottomRight position
  BadgePositionBottomRight = 3,
/// Center position
  BadgePositionCenter = 4,
/// Custom position
  BadgePositionCustom = 5,
};

/// Reward Session Error Code(This is for Signin and Signout API)
typedef SWIFT_ENUM(NSInteger, RewardSessionErrorCode, closed) {
/// App code error(Use iOS application code)
  RewardSessionErrorCodeAppCodeInvalid = 1001,
/// Member information error(After sign in, SDK cannot get user infromation correctly)
  RewardSessionErrorCodeMemberInfoError = 1002,
/// SDK status error(SDK Cookies are missing, The user should be Anonymous user or SDK is disabled)
  RewardSessionErrorCodeSDKStatusError = 1003,
/// Request error (Loading error of background WebView)
  RewardSessionErrorCodeRequestError = 1004,
/// Parameter error(Cannot get Sign in Parameters from Server)
  RewardSessionErrorCodeProcessParameterError = 1005,
/// Unknown error
  RewardSessionErrorCodeUnknown = 9999,
/// Javascript error(Background WebView javascript run error. This includes username password wrong error)
  RewardSessionErrorCodeJSError = 2001,
};










/// Rakuten Reward SDK User information
/// Signin status, Unclaimed mission count, Point, Mission data
SWIFT_CLASS("_TtC16RakutenRewardSDK4User")
@interface User : NSObject
/// Get the user is sign in or not
///
/// returns:
/// Whether the user is sign in or not
- (BOOL)isSignin SWIFT_WARN_UNUSED_RESULT;
/// Get unclaimed count
///
/// returns:
/// Unclaimed mission count
- (NSInteger)getUnclaimed SWIFT_WARN_UNUSED_RESULT;
/// Get Point
///
/// returns:
/// Reward SDK current point
- (NSInteger)getPoint SWIFT_WARN_UNUSED_RESULT;
/// Get mission list
///
/// returns:
/// Mission list
- (NSArray<MissionAchievementData *> * _Nullable)getAchievementsList SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.0 (swiftlang-1001.0.69.5 clang-1001.0.46.3)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreGraphics;
@import CoreLocation;
@import CoreTelephony;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RakutenRewardSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif









@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("Location")
@interface Location : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Location (SWIFT_EXTENSION(RakutenRewardSDK))
@property (nonatomic) double altitude;
@property (nonatomic) double latitude;
@property (nonatomic) double longitude;
@property (nonatomic, copy) NSDate * _Nullable timestamp;
@end

@class NSNumber;

/// Mission Achievement Data class
/// When the mission is achieved, developer can get this data from SDK
SWIFT_CLASS("_TtC16RakutenRewardSDK22MissionAchievementData")
@interface MissionAchievementData : NSObject
/// Claim Point for this achieved mission
///
/// returns:
///
- (void)claim;
/// Get Action code
///
/// returns:
/// Action code
- (NSString * _Nullable)getAction SWIFT_WARN_UNUSED_RESULT;
/// Get Instruction for this mission
///
/// returns:
/// Mission instruction
- (NSString * _Nullable)getInstruction SWIFT_WARN_UNUSED_RESULT;
/// Get icon URL
///
/// returns:
/// Mission icon url
- (NSString * _Nullable)getIconUrl SWIFT_WARN_UNUSED_RESULT;
/// Get Notification UI type
///
/// returns:
/// Notification UI type(MODAL, BANNER, NONE, CUSTOM)
- (NSString * _Nullable)getNotificationType SWIFT_WARN_UNUSED_RESULT;
/// Get mission name
///
/// returns:
/// Mission name
- (NSString * _Nullable)getName SWIFT_WARN_UNUSED_RESULT;
/// Get Achieved date of this mission
///
/// returns:
/// Achieved Date(Date class)
- (NSDate * _Nullable)getAchievedDate SWIFT_WARN_UNUSED_RESULT;
/// Get Mission point
///
/// returns:
/// Mission Point(NSNumber)
- (NSNumber * _Nullable)getPoint SWIFT_WARN_UNUSED_RESULT;
/// Whether this mission is custom or not
///
/// returns:
/// Mission is CUSTOM or not
- (BOOL)isCustom SWIFT_WARN_UNUSED_RESULT;
- (void)setActionWithAction:(NSString * _Nonnull)action;
- (void)setAchievedDateStrWithAchievedDateStr:(NSString * _Nullable)achievedDateStr;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Ad Error Code
typedef SWIFT_ENUM(NSInteger, RADErrorCode, closed) {
/// Network error
  RADErrorCodeNetworkError = 1001,
/// No ad is available
  RADErrorCodeNoAvailableAd = 1002,
/// No coupond data is returned
  RADErrorCodeNoCouponError = 1003,
/// DFP error
  RADErrorCodeDFPError = 1004,
/// Unknown error
  RADErrorCodeUnknown = 9999,
};

/// Banner Ad Size
/// <h3>Usage Example</h3>
/// \code
/// RAdSize.Banner
/// RAdSize.Large
/// RAdSize.Rectangle
///
/// \endcode
typedef SWIFT_ENUM(NSInteger, RAdSize, closed) {
/// Ad size (320x50)
  RAdSizeBanner = 0,
/// Ad size (320x100)
  RAdSizeLarge = 1,
/// Ad size (300x250)
  RAdSizeRectangle = 2,
/// Ad size (300X400)
  RAdSizeFullScreen = 3,
};

typedef SWIFT_ENUM(NSInteger, RWFrequency, closed) {
  RWFrequencyOncePerDay = 0,
  RWFrequencyPer5Minutes = 1,
  RWFrequencyNone = 2,
};

@protocol RakutenADBannerViewDelegate;
@class NSCoder;

SWIFT_CLASS("_TtC16RakutenRewardSDK13RakutenAdView")
@interface RakutenAdView : UIView
@property (nonatomic) enum RAdSize adSize;
@property (nonatomic, copy) NSString * _Nullable keyword;
@property (nonatomic, copy) NSString * _Nullable locationId;
@property (nonatomic, weak) id <RakutenADBannerViewDelegate> _Nullable delegate;
- (void)awakeFromNib;
/// updateConstraints on UIView
- (void)updateConstraints;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16RakutenRewardSDK19RakutenADBannerView")
@interface RakutenADBannerView : RakutenAdView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
/// Call this function to update constraint of Bannerview Dynamically
- (void)updateConstraints;
@end


@interface RakutenADBannerView (SWIFT_EXTENSION(RakutenRewardSDK))
/// Call this function Load BannerView of size (320X50), (320X100), (300X250). Please set Bannersize before calling this function.
/// <h3>Usage Example</h3>
/// \code
/// yourbannerview.load()
///
/// \endcode
- (void)load;
/// Call this Function to Load Ad with AdSize
/// \param AdSize Type of Ad, default Type is banner (320X50)
/// Other Ads type are Large (320X100) , Rectangle (320X250)
/// <h3>Usage EXample</h3>
/// \code
/// yourbannerview.load(RAdSize.Banner)
/// yourbannerview.load(RAdSize.Large)
/// yourbannerview.load(RAdSize.Rectangle)
///
/// \endcode
- (void)loadWithAdSize:(enum RAdSize)AdSize;
@end

@class UIWebView;

@interface RakutenADBannerView (SWIFT_EXTENSION(RakutenRewardSDK)) <UIWebViewDelegate>
- (BOOL)webView:(UIWebView * _Nonnull)webView shouldStartLoadWithRequest:(NSURLRequest * _Nonnull)request navigationType:(UIWebViewNavigationType)navigationType SWIFT_WARN_UNUSED_RESULT;
- (void)webViewDidStartLoad:(UIWebView * _Nonnull)webView;
- (void)webViewDidFinishLoad:(UIWebView * _Nonnull)webView;
- (void)webView:(UIWebView * _Nonnull)webView didFailLoadWithError:(NSError * _Nonnull)error;
@end


/// RADBannerViewDelegate (this covers callback of Banner Ad status change)
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK27RakutenADBannerViewDelegate_")
@protocol RakutenADBannerViewDelegate
/// Tells the delegate an ad request loaded an ad.
/// \param bannerView RakutenADBannerView
///
- (void)didReceiveAdWithBannerView:(RakutenADBannerView * _Nonnull)bannerView;
/// Tells the delegate an ad request failed.
/// \param bannerView RakutenADBannerView, message: Error message, code: RADErrorCode
///
- (void)didFailToReceiveAdWithBannerView:(RakutenADBannerView * _Nonnull)bannerView message:(NSString * _Nonnull)message code:(enum RADErrorCode)code;
@end

@protocol RakutenADInterstitialDelegate;

SWIFT_CLASS("_TtC16RakutenRewardSDK35RakutenADInterstitialBaseController")
@interface RakutenADInterstitialBaseController : UIViewController
@property (nonatomic, copy) NSString * _Nullable locationId;
@property (nonatomic, strong) UIViewController * _Nullable rootViewController;
@property (nonatomic, weak) id <RakutenADInterstitialDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16RakutenRewardSDK21RakutenADInterstitial")
@interface RakutenADInterstitial : RakutenADInterstitialBaseController
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
/// Call this function to initialize RakutenADInterstitial instance
///
/// returns:
/// RakutenADInterstitial instance.
- (RakutenADInterstitial * _Nullable)instantiate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface RakutenADInterstitial (SWIFT_EXTENSION(RakutenRewardSDK))
/// Call this function to load Interstitial Ad.
/// <h3>Usage Example:</h3>
/// \code
/// self.loadAd()
///
/// \endcode
- (void)loadAd;
@end


@interface RakutenADInterstitial (SWIFT_EXTENSION(RakutenRewardSDK)) <UIWebViewDelegate>
- (BOOL)webView:(UIWebView * _Nonnull)webView shouldStartLoadWithRequest:(NSURLRequest * _Nonnull)request navigationType:(UIWebViewNavigationType)navigationType SWIFT_WARN_UNUSED_RESULT;
- (void)webViewDidStartLoad:(UIWebView * _Nonnull)webView;
- (void)webViewDidFinishLoad:(UIWebView * _Nonnull)webView;
- (void)webView:(UIWebView * _Nonnull)webView didFailLoadWithError:(NSError * _Nonnull)error;
@end





/// RakutenADInterstitialDelegate (this covers callback of Interstitial Ad status change)
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK29RakutenADInterstitialDelegate_")
@protocol RakutenADInterstitialDelegate
/// Tells the delegate an ad request loaded an ad.
/// \param ad RakutenADInterstitial
///
- (void)interstitialDidReceiveAdWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate an ad request failed.
/// \param ad RakutenADInterstitial, message: Error message, code: RADErrorCode
///
- (void)interstitialDidFailToReceiveAdWithAd:(RakutenADInterstitial * _Nonnull)ad message:(NSString * _Nonnull)message code:(enum RADErrorCode)code;
@optional
/// Tells the delegate that an interstitial will be presented.
/// \param ad RakutenADInterstitial
///
- (void)interstitialWillPresentScreenWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate the interstitial is to be animated off the screen.
/// \param ad RakutenADInterstitial
///
- (void)interstitialWillDismissScreenWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate the interstitial had been animated off the screen.
/// \param ad RakutenADInterstitial
///
- (void)interstitialDidDismissScreenWithAd:(RakutenADInterstitial * _Nonnull)ad;
/// Tells the delegate that a user click will open another app
/// (such as the App Store), backgrounding the current app.
/// \param ad RakutenADInterstitial
///
- (void)interstitialWillLeaveApplicationWithAd:(RakutenADInterstitial * _Nonnull)ad;
@end


@protocol RakutenRewardDelegate;
@protocol RakutenRewardSessionDelegate;
enum RakutenRewardStatus : NSInteger;
@class User;

/// RakutenReward: This is Rakuten Reward SDK basic function support class
/// This includes initialization, post action data and open portal etc…
SWIFT_CLASS("_TtC16RakutenRewardSDK13RakutenReward")
@interface RakutenReward : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RakutenReward * _Nonnull sharedInstance;)
+ (RakutenReward * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <RakutenRewardDelegate> _Nullable delegate;
@property (nonatomic) BOOL isDebug;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Start session with appCode
/// \param appCode Application Key for Reward SDK
///
///
/// returns:
///
- (void)startSessionWithAppCode:(NSString * _Nonnull)appCode;
/// Post action with actionCode
/// \param actionCode ActionCode
///
///
/// returns:
///
- (void)logActionWithActionCode:(NSString * _Nonnull)actionCode;
/// Go Reward SDK Portal Page
- (void)openPortal;
/// Go Reward SDK Sign in Page
- (void)openSignin;
/// Sign in Reward SDK
/// \param username User name
///
/// \param password Password
///
/// \param delegate Delegate method for this API
///
///
/// returns:
///
- (void)doSignInUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password delegate:(id <RakutenRewardSessionDelegate> _Nullable)delegate;
/// Cancel Sign in API(This API can be called when Sign in API is working)
- (void)cancelSignIn;
/// Sign out Reward SDK
/// \param delegate Delegate method for this API
///
///
/// returns:
///
- (void)doSignOutWithDelegate:(id <RakutenRewardSessionDelegate> _Nullable)delegate;
/// Cancel sign out(This API can be called when Sign out API is working)
- (void)cancelSignOut;
/// Add blacklist URL to block access specific URL
/// (This is for Apple Reject, if the ad URL has problem, use this API)
/// \param urlSet URL set
///
- (void)addBlacklistUrlWithUrlSet:(NSSet<NSString *> * _Nonnull)urlSet;
/// Method for sample app
/// Update mission list(Save into user data)
- (void)updateMissionList;
- (NSString * _Nullable)getAppCode SWIFT_WARN_UNUSED_RESULT;
/// Get current SDK status
///
/// returns:
/// SDK status(Online, Offline, AppCodeInvalid)
- (enum RakutenRewardStatus)getStatus SWIFT_WARN_UNUSED_RESULT;
/// Get User information
///
/// returns:
/// User information
- (User * _Nullable)getUser SWIFT_WARN_UNUSED_RESULT;
/// Get SDK version
///
/// returns:
/// SDK version(number)
- (NSString * _Nonnull)getVersion SWIFT_WARN_UNUSED_RESULT;
/// Get whether SDK is opted out or not
///
/// returns:
/// Whether SDK is optout or not
- (BOOL)isOptedOut SWIFT_WARN_UNUSED_RESULT;
/// Get UI is enable or not
///
/// returns:
/// Whether SDK UI is enabled or not
- (BOOL)isUIEnabled SWIFT_WARN_UNUSED_RESULT;
/// Set SDK Notification UI enabled or not
/// The user can change this setting on Reward SDK Portal, too
/// \param enabled Enable SDK UI or not
///
- (void)setUIEnabledWithEnabled:(BOOL)enabled;
@end


/// RakutenReward: This is Rakuten Reward SDK basic function support class
/// This includes initialization, post action data and open portal etc…
SWIFT_CLASS("_TtC16RakutenRewardSDK16RakutenRewardAds")
@interface RakutenRewardAds : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RakutenRewardAds * _Nonnull sharedInstance;)
+ (RakutenRewardAds * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL isDebug SWIFT_DEPRECATED_MSG("Use RewardConfiguration.isDebug");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Start session with appCode
/// \param appCode Application Key for Reward SDK
///
///
/// returns:
///
- (void)initializeWithAppCode:(NSString * _Nonnull)appCode;
- (NSString * _Nullable)getAppCode SWIFT_WARN_UNUSED_RESULT;
/// Get SDK version
///
/// returns:
/// SDK version(number)
- (NSString * _Nonnull)getVersion SWIFT_WARN_UNUSED_RESULT;
@end


/// Rakuten Reward SDK Delegate(this covers callback of SDK status change)
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK21RakutenRewardDelegate_")
@protocol RakutenRewardDelegate
@optional
/// Change SDK status
/// \param status RakutenReward SDK status
///
- (void)didSDKStateChange:(enum RakutenRewardStatus)status;
/// Achieved mission(change achievement status)
/// \param missionAchivement Achieved mission
///
- (void)didUpdateUnclaimedAchievement:(MissionAchievementData * _Nonnull)missionAchievement;
/// Update user information
/// \param user User information to change
///
- (void)didUpdateUser:(User * _Nonnull)user;
@end

enum RewardSessionErrorCode : NSInteger;

/// Rakuten Reward SDK delegate for Sign in and Sign out APIs
SWIFT_PROTOCOL("_TtP16RakutenRewardSDK28RakutenRewardSessionDelegate_")
@protocol RakutenRewardSessionDelegate
@optional
/// Finished Sign in API successfully
- (void)didFinishSignIn;
/// Failed callback of Sign in API
/// \param error RewardSessionErrorCode(Please check details in RewardSessionErrorCode)
///
- (void)didFailSignInError:(enum RewardSessionErrorCode)error;
/// Finished Sign out API successfully
- (void)didFinishSignOut;
/// Faild callback of Sign out API
/// \param error RewardSessionErrorCode(Please check details in RewardSessionErrorCode)
///
- (void)didFailSignOutWithError:(enum RewardSessionErrorCode)error;
@end

/// Rakutn Reward SDK status definition
typedef SWIFT_ENUM(NSInteger, RakutenRewardStatus, closed) {
/// SDK is Online and ready to use
  RakutenRewardStatusOnline = 0,
/// SDK is Offline
  RakutenRewardStatusOffline = 1,
/// Appliaiton Code(Key) is invalid(Please check your key)
  RakutenRewardStatusAppCodeInvalid = 2,
};


SWIFT_CLASS("_TtC16RakutenRewardSDK19RewardConfiguration")
@interface RewardConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// set variable to true, Reward SDK will not request location permission at beginning of the app
/// default is false
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL enableManualLocationPermissionRequest;)
+ (BOOL)enableManualLocationPermissionRequest SWIFT_WARN_UNUSED_RESULT;
+ (void)setEnableManualLocationPermissionRequest:(BOOL)newValue;
/// if the app is tested in DEBUG mode, <code>isDebug</code> can be toggled to <code>true</code> to print more logs from Reward SDK
/// default is false
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isDebug;)
+ (BOOL)isDebug SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsDebug:(BOOL)newValue;
/// Set SDK Notification UI enabled or not
/// The user can change this setting on Reward SDK Portal, too
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isUserSettingUIEnabled;)
+ (BOOL)isUserSettingUIEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsUserSettingUIEnabled:(BOOL)newValue;
@end

@class UIButton;
enum ColorType : NSInteger;
enum BadgePosition : NSInteger;

/// Rakuten Reward default portal button UI
SWIFT_CLASS("_TtC16RakutenRewardSDK18RewardPortalButton")
@interface RewardPortalButton : UIView
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified portalButton;
- (void)awakeFromNib;
- (void)layoutSubviews;
/// Color type of button image
@property (nonatomic) enum ColorType colorType;
/// Position of badge
@property (nonatomic) enum BadgePosition badgePosition;
/// Badge position by point
@property (nonatomic) CGPoint badgePositionPoint;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

/// Color type definition for Reward Portal Button(Light, Dark)
typedef SWIFT_ENUM(NSInteger, ColorType, closed) {
/// Light color
  ColorTypeLight = 0,
/// Dark color
  ColorTypeDark = 1,
};

/// Badge position(TopLeft, TopRight, BottomLeft, BottomRight, Center, Custom)
typedef SWIFT_ENUM(NSInteger, BadgePosition, closed) {
/// TopLeft position
  BadgePositionTopLeft = 0,
/// TopRight position
  BadgePositionTopRight = 1,
/// BottomLeft position
  BadgePositionBottomLeft = 2,
/// BottomRight position
  BadgePositionBottomRight = 3,
/// Center position
  BadgePositionCenter = 4,
/// Custom position
  BadgePositionCustom = 5,
};

/// Reward Session Error Code(This is for Signin and Signout API)
typedef SWIFT_ENUM(NSInteger, RewardSessionErrorCode, closed) {
/// App code error(Use iOS application code)
  RewardSessionErrorCodeAppCodeInvalid = 1001,
/// Member information error(After sign in, SDK cannot get user infromation correctly)
  RewardSessionErrorCodeMemberInfoError = 1002,
/// SDK status error(SDK Cookies are missing, The user should be Anonymous user or SDK is disabled)
  RewardSessionErrorCodeSDKStatusError = 1003,
/// Request error (Loading error of background WebView)
  RewardSessionErrorCodeRequestError = 1004,
/// Parameter error(Cannot get Sign in Parameters from Server)
  RewardSessionErrorCodeProcessParameterError = 1005,
/// Unknown error
  RewardSessionErrorCodeUnknown = 9999,
/// Javascript error(Background WebView javascript run error. This includes username password wrong error)
  RewardSessionErrorCodeJSError = 2001,
};










/// Rakuten Reward SDK User information
/// Signin status, Unclaimed mission count, Point, Mission data
SWIFT_CLASS("_TtC16RakutenRewardSDK4User")
@interface User : NSObject
/// Get the user is sign in or not
///
/// returns:
/// Whether the user is sign in or not
- (BOOL)isSignin SWIFT_WARN_UNUSED_RESULT;
/// Get unclaimed count
///
/// returns:
/// Unclaimed mission count
- (NSInteger)getUnclaimed SWIFT_WARN_UNUSED_RESULT;
/// Get Point
///
/// returns:
/// Reward SDK current point
- (NSInteger)getPoint SWIFT_WARN_UNUSED_RESULT;
/// Get mission list
///
/// returns:
/// Mission list
- (NSArray<MissionAchievementData *> * _Nullable)getAchievementsList SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
#endif
